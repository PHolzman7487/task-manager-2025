name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: taskmanager
          POSTGRES_USER: taskuser
          POSTGRES_PASSWORD: taskpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U taskuser" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_NAME: taskmanager
      DB_USER: taskuser
      DB_PASSWORD: taskpass
      DB_HOST: localhost
      DB_PORT: 5432
      DEBUG: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd python-task-manager
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django migrations
        run: |
          cd python-task-manager
          python manage.py migrate

      - name: Run backend tests
        run: |
          cd python-task-manager
          python manage.py test

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend lint
        run: |
          cd frontend
          npm run lint || echo "Lint errors ignored"

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Build backend static files
        run: |
          cd python-task-manager
          python manage.py collectstatic --noinput
